#!/bin/bash
## **********************************************************************************
## 
## Name:    droid
## Author:  Gabriel Gonzalez, ADB Devs.
## Email:   gabeg@bu.edu
## License: The MIT License (MIT)
## 
## Syntax: droid [option] <argument>
##         
##         Use '--help' for more details.
## 
## Description: An Android file transfer service.
##              
## Notes: None.
## 
## Notice: I did not write any of the ADB software, thus I cannot take credit for
##         that code. The ADB license might not use The MIT License (MIT), thus this
##         license only applies to the lines of code that do not contain the "adb"
##         command.
## 
## **********************************************************************************



## ================
## GLOBAL VARIABLES
## ================

ARGV=("$@")
PROG_NAME=`basename $0`
PROG_DIR=`echo "$0" | sed "s/\/${PROG_NAME}$//"`

IFS=$'\n'



## #################################
## ##### ANDROID FILE TRANSFER #####
## #################################

## Transfer files between the computer and Android device
main() {
    case "${ARGV[0]}" in
        ""|"-h"|"--help")
            usage
            exit 0
            ;;
        "-c"|"--connect")
            enable_adb
            exit 0
            ;;
        "-r"|"--receive")
            opt="pull"
            ;;
        "-t"|"--transfer")
            opt="push"
            ;;
        "-ls")
            adb shell ls "$(get_destination)"
            exit 0
            ;;
        *)
            usage 1>&2
            exit 1
            ;;
    esac
    
    enable_adb
    file_copy "${opt}" 
}



## ###############################
## ##### PRINT PROGRAM USAGE #####
## ###############################

## Print program usage
usage() {
    echo "Usage: ${PROG_NAME} [option] <argument>"
    echo 
    echo "Options:"
    echo "    -h, --help                    Print program usage"
    echo "    -r, --receive <src> <dst>     Receive files from the Android device (pull)"
    echo "    -t, --transfer <src> <dst>    Transfer files to the Android device (push)"
    echo
    echo "Arguments:"
    echo "    <src>                         Source directory"
    echo "    <dst>                         Destination directory"
}



## #################################
## ##### ANDROID FILE TRANSFER #####
## #################################

## Start android debugger
enable_adb() {
    echo -n ":: Starting adb..."
    adb devices 1> /dev/null 
    
    if [ "$(is_adb)" == true ]; then
        echo "Done."
    else
        echo "Fail."
        exit 1
    fi
}



## Send files onto Android device
file_copy() {
    
    ## Check directory existence
    last=$[ ${#ARGV[@]} - 2 ]
    dst="$(get_destination)"
    
    ## Copy files to/from Android device
    for item in "${ARGV[@]:1:${last}}"; do
        if [[ "${item}" != "${dst}" ]]; then
            echo -n ":: Copying '${item}'  ->  '${dst}'..." 
            adb "$1" "${item}" "${dst}" 
        fi
    done
}



## ########################################
## ##### SOURCE/DESTINATION DIRECTORY #####
## ########################################

## Return the destination directory
get_destination() {
    last=$[ ${#ARGV[@]} - 1 ]
    dst="${ARGV[${last}]}"
    
    if [ "$(is_directory "${dst}")" = false ]; then
        echo "${PROG_NAME}: Destination directory '${dst}' does not exist." 1>&2
        echo 1>&2
        usage 1>&2
        exit 1
    fi
    
    echo "${dst}"
}



## Check if adb was enabled successfully
is_adb() {
    tst=`adb shell ls &> /dev/null`
    if [ $? -eq 0 ]; then
        echo true
    else
        echo false
    fi
}



## Check if input is a directory
is_directory() {
    case "${ARGV[0]}" in
        "-t")
            dir=`adb shell ls -d "$1" | grep -c "No such file or directory"`
            ;;
        "-r")
            dir=`ls -d "$1" | grep -c "No such file or directory"`
            ;;
    esac
    
    if [ "${dir}" -eq 1 ]; then
        echo false
    else
        echo true
    fi
}



## ============
## Execute Main
## ============

main 
